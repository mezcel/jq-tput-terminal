#!/bin/bash

function splashScreen {
	echo "$CLR_ALL"
	clear
	width=$(tput cols)
	height=$(tput lines)
	str="Terminal Rosary using Jq and Bash"
	length=${#str}
	centerText=$(( (width / 2)-(length / 2) ))
	tput cup $((height/2)) $centerText
	echo $MODE_BEGIN_UNDERLINE$str$MODE_EXIT_UNDERLINE
	str="( A new 140x40 Xterm window will popup )"
	length=${#str}
	centerText=$(( (width / 2)-(length / 2) ))
	tput cup $height $centerText
	echo $str

	read -s -t 1 -p "Audio will autoplay in a looped sequence untill 'M' key is pressed." exitVar &>/dev/null
}

function launch_new_windowBackup {

	processPidName=$(echo $TERM)

	#if [ $? -eq 1 ];then
	if [ $processPidName != "linux" ]; then
		## most linux systems have xterm
		# XTerm*geometry: 140x40
		hostedDirPath=$(dirname $0)
		xterm -geometry 140x40+0+0 -e "$hostedDirPath/bash-rosary"
	else
		hostedDirPath=$(dirname $0)
		bash $hostedDirPath/bash-rosary
	fi

}

function launch_new_window {
	hostedDirPath=$(dirname $0)
	processPidName=$(echo $TERM)

	case $processPidName in
		"linux" )	## login terminal
					isLinuxTerminal=1
					bash "$hostedDirPath/bash-rosary"
					;;
		* ) ## launch app through a new xterm
			## most linux systems have xterm
			# XTerm*geometry: 140x40
			xterm -geometry 140x40+0+0 -e "$hostedDirPath/bash-rosary"
			;;
	esac

}

function startOgg123Demo {
	hostedDirPath=$(dirname $0)

	## Set initial pulseaudio system volume
	if [ -f /usr/bin/amixer ]; then
		amixer -q set Master 33% </dev/null >/dev/null 2>&1
	fi
	
	if [ -f /usr/bin/ogg123 ]; then
		ogg123 -q $hostedDirPath/source/ogg/WindChime.ogg </dev/null >/dev/null 2>&1 &
	fi	
	
}

function download_dependencies {
	currentDirPath=$(dirname $0)
	bash "$currentDirPath/source/gnu/download-gnu-software"
}

# download_dependencies
startOgg123Demo
splashScreen

currentDirPath=$(dirname $0)
launch_new_window
